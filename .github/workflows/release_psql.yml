name: Release PSQL Storage
 
on:
  push:
    tags:
      - "psql*"
  workflow_dispatch:

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm i -g pnpm
      - run: pnpm install 
      - run: pnpm run build -- --scope=@grammyjs/storage-psql
      - run: pnpm run test -- --scope=@grammyjs/storage-psql
      - run: pnpm publish --filter=@grammyjs/storage-psql --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  publish-nest:
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Setup Deno
        uses: maximousblk/setup-deno@v1
      - run: deno -V
      - name: Run tests
        run: deno test packages/psql/__tests__/deno.ts --unstable --no-check --allow-net
      - name: Publish
        run: |
          deno install -Af --unstable https://x.nest.land/eggs@0.3.10/eggs.ts
          eggs link ${{ secrets.NESTAPIKEY }}
          deno run --allow-read --allow-net --allow-env --unstable eggs.ts psql
